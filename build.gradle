buildscript {

    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://repo.spring.io/plugins-release" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.springframework.build.gradle:propdeps-plugin:0.0.7"
    }
}

group = 'com.github.debop'
version = '0.0.1-SNAPSHOT'


apply plugin: 'java'
apply plugin: 'kotlin'

sourceCompatibility = JavaVersion.VERSION_1_6
targetCompatibility = JavaVersion.VERSION_1_6

compileTestJava {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"

    compile "joda-time:joda-time:$joda_time_version"

    compile "org.slf4j:slf4j-api:$slf4j_version"
    compile "ch.qos.logback:logback-classic:$logback_version"

    testCompile "junit:junit:$junit_version"
    testCompile "org.assertj:assertj-core:$assertj_core_java7_version"
    testCompile "org.assertj:assertj-joda-time:$assertj_joda_time_java7_version"
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.incremental = true
    options.compilerArgs << '-Xlint:unchecked'
}

task packageSources(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

compileJava.dependsOn processResources
/*
 * Copyright (c) 2016. Sunghyouk Bae <sunghyouk.bae@gmail.com>
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

//    processResources.dependsOn cleanResources

artifacts.archives packageSources

test {
    ignoreFailures true
    jvmArgs "-XX:MaxPermSize=512m"
}

defaultTasks 'clean', 'jar'

task wrapper(type: Wrapper) {
    gradleVersion = '2.14'
}

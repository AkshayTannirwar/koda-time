buildscript {
    ext.kotlin_version = '1.1.2-5'
    repositories {
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://repo.spring.io/plugins-release" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.netflix.nebula:nebula-kotlin-plugin:1.1.2"
        classpath "com.netflix.nebula:nebula-publishing-plugin:4.9.1"
        classpath "org.springframework.build.gradle:propdeps-plugin:0.0.7"
    }
}

/*
 * Copyright (c) 2016. Sunghyouk Bae <sunghyouk.bae@gmail.com>
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// nebula.kotlin plugin 을 지정하면, kotlin 관련 설정을 기본적으로 설정해준다. 특히 jvm-target 1.8 을 지정해 준다.
apply plugin: 'nebula.kotlin'
apply plugin: 'kotlin'

apply plugin: 'maven'
apply plugin: 'nebula.maven-publish'
apply plugin: 'nebula.source-jar'
apply plugin: 'nebula.javadoc-jar'
apply plugin: 'propdeps'
apply plugin: 'propdeps-maven'

group = 'com.github.debop'
version = '1.1.3-SNAPSHOT'

artifacts {
    archives sourceJar, javadocJar
}

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    compile "joda-time:joda-time:2.9.9"
    provided "org.joda:joda-convert:1.8.1"

    testCompile "org.slf4j:slf4j-api:1.7.24"
    testCompile "ch.qos.logback:logback-classic:1.2.3"
    testCompile "junit:junit:4.12"
    testCompile "org.assertj:assertj-core:3.8.0"
    testCompile "org.jetbrains.kotlin:kotlin-test"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
}

publishing {
    publications {
        nebula(MavenPublication) {
        }
    }
}
kotlin {
    experimental {
        coroutines "enable"    
    }
}